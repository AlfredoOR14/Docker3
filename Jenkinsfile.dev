pipeline {
    agent any
    
    environment {
        SONAR_TOKEN = credentials('SonarQube')
        SONAR_URL = 'http://localhost:9000'
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                // Compilar el proyecto de Spring Boot
                bat './mvnw clean package'
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                script {
                    // Ejecutar el análisis de SonarQube
                    def scannerHome = tool 'SonarQubeScanner'
                    withEnv(["SONAR_USER_HOME=${scannerHome}"]) {
                        bat "${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=nombre-del-proyecto \
                            -Dsonar.sources=src \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.host.url=${env.SONAR_URL} \
                            -Dsonar.login=${env.SONAR_TOKEN}"
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Limpiar el ambiente después de la ejecución
            cleanWs()
        }
    }
}
